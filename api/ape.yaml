openapi: 3.1.1

info:
  title: "Curious Ape API"
  description: "Automated habit tracking application"
  version: 1.0.0

servers:
  - url: "http://localhost:4000/api/v1"
    description: "Dev environment"
  - url: "https://ape.danicos.me/api/v1"
    description: "Production environment"

paths:
  /days:
    get:
      operationId: "getDays"
      summary: "Get all days for a Month"
      parameters:
        - in: query
          name: "date"
          description: "Returns all days of the current Month"
          schema:
            type: string
            # enum: []
      responses:
        "200": # Response
          description: "OK"
          content: # Response body
            application/json: # Media type
              schema: # Must have
                $ref: '#/components/schemas/ArrayOfDays'

        "401":
          $ref: '#/components/responses/Unauthorized'
        "5XX":
          $ref: '#/components/responses/ServerError'

      externalDocs:
        description: Learn more about user operations provided by this API.
        url: "https://api.example.com/docs/user-operations"

  /days/{date}:
    get:
      operationId: "getDayByDate"
      summary: "Represents a single day"
      parameters:
        - name: date
          in: path
          description: "Day Date"
          required: true
          schema:
            type: string
      responses:
        "200":
          description: "Ok"

components:
  responses:
    NotFound:
      description: "Not found"
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    Unauthorized:
      description: "Unauthorized"
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    ServerError:
      description: "Server Error"
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

  schemas:
    AnyValue:
      description: "Can be any value"

    ArrayOfDays:
      type: array
      items:
        $ref: '#/components/schemas/Day'

    Day:
      type: object
      required: ['id', 'date']
      properties:
        id:
          type: integer
          minimum: 1
          readOnly: false
          writeOnly: false
        date:
          $ref: '#/components/schemas/Date'

    Date:
      type: string
      format: date

    Error:
      type: object
      required: ['code', 'message']
      properties:
        code:
          type: integer
          minimum: 100
          maximum: 600
        message:
          type: string


  parameters:
    offsetParam: # <-- Arbitrary name for the definition that will be used to refer to it.
      # Not necessarily the same as the parameter name.
      in: query
      name: offset
      required: false
      schema:
        type: integer
        minimum: 0
      description: The number of items to skip before starting to collect the result set.
    limitParam:
      in: query
      name: limit
      required: false
      schema:
        type: integer
        minimum: 1
        maximum: 50
        default: 20
      description: The numbers of items to return.